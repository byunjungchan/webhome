1. 요소 접근하기

.getElementById() 요소의 ID특성 값(페이지 내에서는 유일해야한다.)을 이용한다.

.querySelector() CSS선택자를 이용하며, 일치하는 요소들 중 첫번째 요소를 리턴한다.

.getElementByClassName() 지정된 CLASS특성 값을 가지는 요소들을 모두 선택한다

.getElementByTagName() 지정된 태그 이름을 가지는 요소들을 모두 선택한다.

.querySelectAll() 지정된 CSS 선택자와 일치하는 요소들을 모두 선택한다.

.parentNode() 현재 요소 노드의 부모 노드를 선택한다(단 하나의 요소만 리턴한다.)

.previourSibling() 현재 DOM트리 내의 이전 또는 다음 형제 요소를 선택한다.

.nextSibling() 현재 DOM트리 내의 이전 또는 다음 형제 요소를 선택한다.

.firstChild() 현재 요소의 첫번째 혹은 마지막 자식 노드를 선택한다.

.lastChild() 현재 요소의 첫번째 혹은 마지막 자식 노드를 선택한다.


2 요소 조작하기

.nodeValue() 이 속성을 통해 텍스트 노드ㅡ이 내용에 접근 하거나 수정 할 수 있다.

.innerHTML() 속성을 이용하면, 이 하나의 속성을 통해 모든 자식 요소와 텍스트 콘텐츠에 접근이 가능하다.



.creatElement() 

.creatTextNode()

.appendChild()

.removeChild()

위에 나열된 메서드들을 이용하면 새로운 노드를 생성하고
노드 트리에 새로운 노드를 추가하거나 제거하는 등의 작업이 가능 하다.
이를 dom조작 이라고 한다.



노드
//노드는 전체노드 4개가 있고, 그 안에 div 등등 노드가 엘리먼트 노드 이걸 다 해서 도큐먼트노드이다. 

 문서노드 	document

 요소노드 	element html(rootElement)

 	  	<div id="" class="" style="" title="">텍스트</div>
							텍스트노드
 속성노드(attribute) attr	id, class, style, title

 텍스트노드

<ul>

	<li>1</li>

		.creatElement('li);


</ul>

appendChild() //"선택된 node의 마지막자식 노드 뒤에 추가"


.hasAttribute()

.getAttribute()

.setAttribute()

.removeAttribute()

첫번째 메서드는 지정된 특성이 존재하는지를 확인한다.
두번째 메서드는 지정한 특성 값을 가져온다.
세번째 메서드는 지정된 특성 값을 변경하며,
마지막 메서드는 지정된 특성을 요소로부터 제거한다.

** Sibling 씨블링 (형제) >> 형제 .. sibling >> "나를 제외한 형제"










