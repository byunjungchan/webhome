1. ajax

Ajax(Asynchronous JavaScript and XML, 에이잭스)는 비동기적인 웹 애플리케이션의 제작을 위해 아래와 같은 조합을 이용하는 웹 개발 기법이다.


2. json

 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷이다. 비동기 브라우저/서버 통신 (AJAX)을 위해, 넓게는 XML(AJAX가 사용)을 대체하는 주요 데이터 포맷이다. 특히, 인터넷에서 자료를 주고 받을 때 그 자료를 표현하는 방법으로 알려져 있다. 자료의 종류에 큰 제한은 없으며, 특히 컴퓨터 프로그램의 변수값을 표현하는 데 적합하다.



3. jquery

 HTML의 클라이언트 사이드 조작을 단순화 하도록 설계된 크로스 플랫폼의 자바스크립트 라이브러리다. 존 레식이 2006년 뉴욕 시 바캠프(Barcamp NYC)에서 공식적으로 소개하였다. jQuery는 오늘날 가장 인기있는 자바스크립트 라이브러리 중 하나이다.


================


ajax

:비동기, 자바스크립트, xml => 요즘엔 json 방식으로 구현
"자바스크립트 >> 비동기방식 >> 서버와 클라이언트 >> json"

HttpXmlRequest

기존 웹 어플리케이션 = 브라우져 폼을 채우고 서버로 제품(submit)하여 응답을 얻음
ajax 웹 어플리케이션 = 필요한 데이터만을 웹 서버에 요청해서 클라이언트 쪽에서
			데이터 처리가능 자바스크립트 사용


장점)

페이지 이동없이 고속으로 화면 전환
서버처리 안기다려도됨
비동기로 요청가능
수신하는 데이터양을 줄 일 수 있음
클라이언트에게 처리 위임할 수 있음


단점)

ajax를 쓸 수 없는 브라우저에서는 문제
http클라이언트 기능이 한정되어 있음
페이지 이동없는 통신으로 인한 보안상의 문제가 있음
지원하는 charset이 한정적임
스크립트로 작성이 되기 때문에 디버깅이 용이하지 않음
요청을 남발하면 역으로 서버 과부하 걸릴 수 있음
다른 도메인과 통신 불가능


================

json(제이슨, javascript object notation)

1. json.parse(문자열);// 문자열을 자바스크립트 객체로 변환시켜주는 함수
:json은 데이터 오브젝트를 전달하기 위해 텍스트를 사용하는 개방형 표준 포맷이다.
수많은 프로그래밍 언어에서 수비게 이용가능
ajax를 위해 대체하는 주요 데이터 포맷.
인터넷에서 자료를 주고 받을때 그 자료를 표현하는 방법

"서버의 자료를 json화 시켜서 클라이언트에 전송"

2. json.stringify(myobj);// json객체를 문자열로 변환 시켜주는 함수


json

var json1={'키':'값','키':'값','키':'값',};

json1.키


//컬렉션
each >>> "객체"

for (인덱스 in 객체) {
            document.getElementById("demo").innerHTML += x + "<br>";

}


foreach(as){


}


delete json;//요소 삭제


문자열 처리 함수

var str="soyo";// '', " '' ", ' "" '
var str2=new string("soyo");// 힙

substr(가져올 인덱스, 가져올 갯수)

var query="insert.php"

query.lenght;// 10

query.substr(0,5);


"문자열에서 '.php'를 제외하고 나머지를 콘솔에 항상 표시
substr() 함수를 만들어 보세요.

lengh;// 전체 문자열의 길이

.php;// 공통문자열 의 길이



// 쿼리문을 


query문이 "insert" 회원가입페이지로 이동합니다. (팝업)

query문이 "updateDo" 회원수정페이지로 이동합니다. (팝업)

query문이 "selectList" 회원삭제페이지로 이동합니다. (팝업)

query문이 "deleteAction" 회원조회페이지로 이동합니다. (팝업)


==================

문자열 1.concat(문자열2, 문자열3, 문자열4); // concat >> "문자열 합"

var text1="hellow";

var text2="world!";

var text3= text1.concat("soyo ",text2," aaaa");

hellow soyo world! aaaa


===================

var str= "a,b,c,d,e,f";

var arr= str.split(","); //문자열 >>> 배열
//문자열.split("구분 기호");

"문자열을 구분기호로 분리해서 배열에 저장"



var str= "a,b,c,d,e,f";

var arr= str.split(","); // arr=["a","b","c","d","e","f"]


var 배열=split("-","010-123-4567") >>> 

문자열을 구분기호로 배열하는 방법


==========================================



javascript >>> "크로스브라우징 잘안됨", 상대적으로 어렵다.

자바스크립트 라이브러리 >> "이미 만들어 놓은, 미리 사용하기 위한"

jQuery,actionscript, angular.js >>
node.js >> cordova(하이브리드앱) <<  자바스크립트 서버사이드


jQuery ... flash >> ios에서 플래쉬 안쓴다~ 선언 >> android가 썻지만 이제는 안씀

1. 플래쉬 대체

2. 크로스 브라우징

3. css 선택자를 이용해서! 작업

4. 자바스크립트의 비해 단순화, 직관적

5. 클라이언트 입장에서 편하게 사용

6. 매서드 체이닝(매서드를 연속해서 설정가능)

7. 모바일 제이쿼리

8. 다양한 플러그인이 제공

jquery('selector') >> $('selector')

document.getElementById('di') >> $('#di')



var a="soyo"; //자바스크립트 객체

var a=$('li'); //제이쿼리 객체


제이쿼리 기본 라이브러리 설치 >>>

1.파일 다운 받아서 연결

2. CDN(네트워크 연결)


.css().css().css()

ex).style.width="";
.style.height=""; 이거를.. 위에 처럼 연결해서 쓸 수 있음



.document.querySelect('.클래스');
.document.querySelect('#');


선택자 >> 이벤트 >> 이벤트핸들링 >> 구현(함수)

$('css선택자')
.css().css().css()
선택.on('이벤트',함수);


<button onclick=""></button>

button.onclick=function(){


}

button.addEventLisener("click",함수);

===순서

1. 제이쿼리 기본라이브러리 설정(다운설치,cdn)

2. selector함수
 jquery('선택자') >> $('선택자') >> 선택자==css

3.jquery 매서드 구현
 $('선택자').css(); //객체 = 속성 + 매서드


"윈도우가 로드된 이후에 사용"

$(document).ready(function(){

});


$('*') 전체 선택자

$('html,body') 태그 선택자

$('.클래스) 클래스 선택자

$('태그 태그') 하위

$('태그>태그') 자식

$('태그+태그') 형제(바로 다음 형제만)

$('태그~태그') 형제(다음에 모든 형제)






































